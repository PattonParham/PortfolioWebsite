{"ast":null,"code":"var _jsxFileName = \"/Users/pattonparham/Documents/CookSystemsFastTrack/ReactPortfolioWebsite/src/components/ProjectsWindow/ProjectsWindow.js\";\nimport React from \"react\";\nimport { Component } from \"react\";\nimport { Col, Row, Container } from \"../Grid/Grid\";\nimport './ProjectsWindow.css';\n\nclass ProjectsWindow extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showFibFizz: false,\n      showRationals: false,\n      showCollections: false,\n      showSchemaDesign: false,\n      showControllersServices: false,\n      showTwitterAPI: false,\n      showJSPrimer: false,\n      showJSDeclarative: false,\n      showJSQuizler: false,\n      showJSCopyPage: false,\n      showJSDevDuel: false,\n      showPasswordGenerator: false,\n      showWeatherDash: false,\n      showTakeAHike: false,\n      showEmployeeDirectory: false,\n      showGensplice: false\n    };\n  }\n\n  render() {\n    const {\n      showFibFizz,\n      showRationals,\n      showCollections,\n      showSchemaDesign,\n      showControllersServices,\n      showTwitterAPI,\n      showJSPrimer,\n      showJSDeclarative,\n      showJSQuizler,\n      showJSCopyPage,\n      showJSDevDuel,\n      showPasswordGenerator,\n      showWeatherDash,\n      showTakeAHike,\n      showEmployeeDirectory,\n      showGensplice\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ProjectsWindow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"linkdesc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, \"Project Links\"))), /*#__PURE__*/React.createElement(Row, {\n      className: \"linkRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://github.com/fasttrackd-student-work/java-assignment-fibonacci-fizzbuzz-PattonParham\",\n      className: \"links\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, \"Fibonacci/FizzBuzz\")), /*#__PURE__*/React.createElement(Col, {\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      href: \"\",\n      className: \"description\",\n      onClick: () => this.setState({\n        showFibFizz: !showFibFizz\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, \"Description\"), showFibFizz ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, \"User Story: As a mathematician I want a fibonacci sequencer so that I can access different values and manipulate  the fibonacci sequence\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, \"Description: A test driven development java program exercise to intentionally mimic and access integer data from the fibonacci sequence\")) : null))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"linkdesc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"linkRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://github.com/fasttrackd-student-work/java-assignment-rationals-PattonParham\",\n      className: \"links\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, \"Rationals\")), /*#__PURE__*/React.createElement(Col, {\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      href: \"\",\n      className: \"description\",\n      onClick: () => this.setState({\n        showRationals: !showRationals\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, \"Description\"), showRationals ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, \"User Story: As a mathematician I want a rational operator so that I can add, subtract, multiply or divide rational numbers\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, \"Description: A java program designed to perform the addition, subtraction, multiplication, and division operations on rational numbers and return the correct value\")) : null))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"linkdesc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      className: \"linkRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://github.com/fasttrackd-student-work/java-assignment-collections-PattonParham\",\n      className: \"links\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, \"Collections\")), /*#__PURE__*/React.createElement(Col, {\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      href: \"\",\n      className: \"description\",\n      onClick: () => this.setState({\n        showCollections: !showCollections\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, \"Description\"), showCollections ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, \"User Story: As a company I want an employee database so that I can better keep track of the chain of command\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, \"Description: A java program utilizing Collections designed to help organize an employee database by employee, manager and chain of command\")) : null)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"linkdesc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      className: \"linkRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://github.com/fasttrackd-student-work/java-assignment-schema-design-PattonParham\",\n      className: \"links\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, \"Schema Design\")), /*#__PURE__*/React.createElement(Col, {\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      href: \"\",\n      className: \"description\",\n      onClick: () => this.setState({\n        showSchemaDesign: !showSchemaDesign\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, \"Description\"), showSchemaDesign ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, \"User Story: As a person with specific interests I want a friend finding app so that I can get connected with other people in my area who share the same interests\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, \"Description: A schema written to represent relationship between persons, interests and location to match them up based on interest and location\")) : null)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"linkdesc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      className: \"linkRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://github.com/fasttrackd-student-work/spring-assignment-rest-PattonParham\",\n      className: \"links\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }, \"Controllers/Services\")), /*#__PURE__*/React.createElement(Col, {\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      href: \"\",\n      className: \"description\",\n      onClick: () => this.setState({\n        showControllersServices: !showControllersServices\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, \"Description\"), showControllersServices ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, \"User Story: As an instructor I want a quiz application so that I can create quizzes, questions, and answers, save them and create randomized quizzes\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, \"Description: An application written in Java and Spring that allows the user to input their own custom quizzes, questions and answers\")) : null)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"linkdesc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      className: \"linkRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://github.com/fasttrackd-student-work/spring-assessment-social-media-team-sprint1\",\n      className: \"links\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }\n    }, \"Twitter API Assessment\")), /*#__PURE__*/React.createElement(Col, {\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      href: \"\",\n      className: \"description\",\n      onClick: () => this.setState({\n        showTwitterAPI: !showTwitterAPI\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }\n    }, \"Description\"), showTwitterAPI ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }, \"User Story: As a twitter developer I want a Twitter API so that I can perform the functionalities of twitter on my database\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }\n    }, \"Description: A mock twitter API devleoped using Controllers, Services, Repositories and Response DTOs\")) : null)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"linkdesc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      className: \"linkRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://github.com/fasttrackd-student-work/js-assignment-primer-PattonParham\",\n      className: \"links\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }\n    }, \"JS Primer\")), /*#__PURE__*/React.createElement(Col, {\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      href: \"\",\n      className: \"description\",\n      onClick: () => this.setState({\n        showJSPrimer: !showJSPrimer\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }\n    }, \"Description\"), showJSPrimer ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }\n    }, \"User Story: As a store clerk I want a program so that I can calculate the total price of items with tax included\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }\n    }, \"Description: Description: A simple function that calculates the total price of items, tax included where applicable\")) : null)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"linkdesc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      className: \"linkRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://github.com/fasttrackd-student-work/js-assignment-declarative-PattonParham\",\n      className: \"links\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }\n    }, \"JS Declarative\")), /*#__PURE__*/React.createElement(Col, {\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      href: \"\",\n      className: \"description\",\n      onClick: () => this.setState({\n        showJSDeclarative: !showJSDeclarative\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }\n    }, \"Description\"), showJSDeclarative ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }\n    }, \"User Story: As a store clerk I want a program so that I can calculate the total price of items with tax included\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }\n    }, \"Description: A simple function that calculates the total price of items, tax included where applicable\")) : null)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"linkdesc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      className: \"linkRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://github.com/fasttrackd-student-work/js-assignment-quizler-PattonParham\",\n      className: \"links\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }\n    }, \"JS Quizler\")), /*#__PURE__*/React.createElement(Col, {\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      href: \"\",\n      className: \"description\",\n      onClick: () => this.setState({\n        showJSQuizler: !showJSQuizler\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }\n    }, \"Description\"), showJSQuizler ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }\n    }, \"User Story: As an instructor I want a quiz application so that I can create quizzes, questions, and answers, save them and create randomized quizzes\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 13\n      }\n    }, \"Description: An application written in JavaScript, utilizing inquirer.js and vorpal.js that allows the user to input their own custom quizzes, questions and answers\")) : null)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"linkdesc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      className: \"linkRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://github.com/fasttrackd-student-work/js-assignment-copy-page-PattonParham\",\n      className: \"links\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }\n    }, \"JS Copy Page\")), /*#__PURE__*/React.createElement(Col, {\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      href: \"\",\n      className: \"description\",\n      onClick: () => this.setState({\n        showJSCopyPage: !showJSCopyPage\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }\n    }, \"Description\"), showJSCopyPage ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 13\n      }\n    }, \"User Story: As a mac salesperson I want an informative web page so that I can have an aesthetically pleasing document to reference when potential customers have questions\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 13\n      }\n    }, \"Description: A mock html and css webpage design of the Macbook Pro Technical Specifications\")) : null)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"linkdesc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      className: \"linkRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://github.com/fasttrackd-student-work/js-assignment-dev-duel-PattonParham\",\n      className: \"links\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }\n    }, \"JS Dev-Duel\")), /*#__PURE__*/React.createElement(Col, {\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      href: \"\",\n      className: \"description\",\n      onClick: () => this.setState({\n        showJSDevDuel: !showJSDevDuel\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }\n    }, \"Description\"), showJSDevDuel ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 13\n      }\n    }, \"User Story: As a github user I want a game where I can battle other github users based on their stats\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 13\n      }\n    }, \"Description: A JavaScript written game in which two github users enter, and based on their stats accessed using github's api, one github user exits victorious\")) : null)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"linkdesc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      className: \"linkRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://pattonparham.github.io/Password-Generator/\",\n      className: \"links\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }\n    }, \"Password Generator\")), /*#__PURE__*/React.createElement(Col, {\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      href: \"\",\n      className: \"description\",\n      onClick: () => this.setState({\n        showPasswordGenerator: !showPasswordGenerator\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }\n    }, \"Description\"), showPasswordGenerator ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 13\n      }\n    }, \"User Story: As an account user I want a password generator so that I can have a secure, randomly generated password\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 13\n      }\n    }, \"Description: A password generator written in javascript where you can specify character length and what types of characters you'd like to include\")) : null)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"linkdesc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      className: \"linkRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://pattonparham.github.io/Weather-Dashboard/\",\n      className: \"links\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }\n    }, \"Weather Dashboard\")), /*#__PURE__*/React.createElement(Col, {\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      href: \"\",\n      className: \"description\",\n      onClick: () => this.setState({\n        showWeatherDash: !showWeatherDash\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }\n    }, \"Description\"), showWeatherDash ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 13\n      }\n    }, \"User Story: As an outdoors person I want a weather dashboard so that I can check the weather before I make plans outdoors\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 13\n      }\n    }, \"Description: A weather dashboard written in JavaScript/jQuery that provides the 5 day forecast for any city in the USA using the Wational Weather API\")) : null)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"linkdesc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      className: \"linkRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://jackjewell.github.io/TakeAHike/\",\n      className: \"links\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }\n    }, \"Take A Hike\")), /*#__PURE__*/React.createElement(Col, {\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      href: \"\",\n      className: \"description\",\n      onClick: () => this.setState({\n        showTakeAHike: !showTakeAHike\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }\n    }, \"Description\"), showTakeAHike ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 13\n      }\n    }, \"User Story: As an outdoors person I want a park finder so that I can find nice places to hike near by me or in specific locations\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 13\n      }\n    }, \"Description: A national park finder written in JavaScript using the National Parks Service API to location parks near spefic locations\")) : null)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"linkdesc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      className: \"linkRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://serene-ravine-67154.herokuapp.com/\",\n      className: \"links\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }\n    }, \"Employee Directory\")), /*#__PURE__*/React.createElement(Col, {\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      href: \"\",\n      className: \"description\",\n      onClick: () => this.setState({\n        showEmployeeDirectory: !showEmployeeDirectory\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }\n    }, \"Description\"), showEmployeeDirectory ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 13\n      }\n    }, \"User Story:\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 13\n      }\n    }, \"Description:\")) : null)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"linkdesc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      className: \"linkRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://aqueous-beyond-24181.herokuapp.com/\",\n      className: \"links\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }\n    }, \"GenSplice\")), /*#__PURE__*/React.createElement(Col, {\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      href: \"\",\n      className: \"description\",\n      id: \"bottomBtn\",\n      onClick: () => this.setState({\n        showGensplice: !showGensplice\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }\n    }, \"Description\"), showGensplice ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 13\n      }\n    }, \"User Story: As a producer I want a random rhythmic audio generator so that I can generate new ideas outside the box of human thinking therefore more rapidly\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 13\n      }\n    }, \"Description: A random audio generator React App written in JavaScript and utlilizing sound cloud's API and react-player widget to acces wav files from soundcloud and based on millisecond inputs, generate and splice together randomly any wavs input via url\")) : null)));\n  }\n\n}\n\n;\nexport default ProjectsWindow;","map":{"version":3,"sources":["/Users/pattonparham/Documents/CookSystemsFastTrack/ReactPortfolioWebsite/src/components/ProjectsWindow/ProjectsWindow.js"],"names":["React","Component","Col","Row","Container","ProjectsWindow","state","showFibFizz","showRationals","showCollections","showSchemaDesign","showControllersServices","showTwitterAPI","showJSPrimer","showJSDeclarative","showJSQuizler","showJSCopyPage","showJSDevDuel","showPasswordGenerator","showWeatherDash","showTakeAHike","showEmployeeDirectory","showGensplice","render","setState"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Component} from \"react\";\nimport {Col, Row, Container} from \"../Grid/Grid\";\nimport './ProjectsWindow.css'\n\nclass ProjectsWindow extends Component{\nstate = { \n        showFibFizz: false, showRationals: false, showCollections: false, showSchemaDesign: false, \n        showControllersServices: false, showTwitterAPI: false, showJSPrimer: false, \n        showJSDeclarative: false, showJSQuizler: false, showJSCopyPage: false, showJSDevDuel: false,\n        showPasswordGenerator: false, showWeatherDash: false, showTakeAHike: false, \n        showEmployeeDirectory: false, showGensplice: false\n        }; \nrender(){\nconst {\n        showFibFizz, showRationals, showCollections, showSchemaDesign, showControllersServices,\n        showTwitterAPI, showJSPrimer, showJSDeclarative, showJSQuizler, showJSCopyPage, \n        showJSDevDuel, showPasswordGenerator, showWeatherDash, showTakeAHike, showEmployeeDirectory,\n        showGensplice \n      } = this.state;\nreturn(\n<div className = \"ProjectsWindow\">\n    <div className = \"linkdesc\">\n\n    <Row>\n        <Col size=\"sm\">\n            <p className = \"header\">Project Links</p>\n        </Col>\n    </Row>\n    <Row className = \"linkRow\">\n        <Col size =\"sm\">\n        <a href = \"https://github.com/fasttrackd-student-work/java-assignment-fibonacci-fizzbuzz-PattonParham\" className = \"links\">Fibonacci/FizzBuzz</a>\n        </Col>\n        <Col size =\"sm\">\n        <button href = \"\" className = \"description\" onClick ={() => this.setState({ showFibFizz: !showFibFizz})}>Description</button>\n        { showFibFizz\n            ? <div className = \"pDiv\">\n                <div className = \"dDiv\">\n                User Story: As a mathematician I want a fibonacci sequencer \n                so that I can access different values and manipulate  the fibonacci sequence\n                </div>\n                <div className=\"dDiv\">\n                Description: A test driven development java program exercise to intentionally \n                mimic and access integer data from the fibonacci sequence\n                </div>\n            </div>\n            : null\n        }\n        </Col> \n    </Row>\n    </div>\n    <div className = \"linkdesc\">\n    <Row className = \"linkRow\"> \n        <Col size =\"sm\">\n        <a href = \"https://github.com/fasttrackd-student-work/java-assignment-rationals-PattonParham\" className = \"links\">Rationals</a>\n        </Col>\n        <Col size =\"sm\">\n        <button href = \"\" className = \"description\" onClick ={() => this.setState({ showRationals: !showRationals})}>Description</button>\n        { showRationals\n            ? <div className = \"pDiv\">\n            <div className=\"dDiv\">\n            User Story: As a mathematician I want a rational operator \n            so that I can add, subtract, multiply or divide rational numbers\n            </div>\n            <div className=\"dDiv\">\n            Description: A java program designed to perform the addition, subtraction, \n            multiplication, and division operations on rational numbers and return the correct value\n            </div>\n\n            </div>\n            : null\n        }\n        </Col> \n        \n    </Row>\n    </div>\n    <div className = \"linkdesc\"></div>\n    <Row className = \"linkRow\">\n        <Col size =\"sm\">\n        <a href = \"https://github.com/fasttrackd-student-work/java-assignment-collections-PattonParham\" className = \"links\">Collections</a>\n        </Col>\n        <Col size =\"sm\">\n        <button href = \"\" className = \"description\" onClick ={() => this.setState({ showCollections: !showCollections})}>Description</button>\n        { showCollections\n            ? <div className = \"pDiv\">\n            <div className=\"dDiv\">\n            User Story: As a company I want an employee database so that I can better\n            keep track of the chain of command\n            </div>\n            <div className=\"dDiv\">\n            Description: A java program utilizing Collections designed to help organize an employee database by \n            employee, manager and chain of command\n            </div>\n            </div>\n            : null\n        }\n        </Col> \n    </Row>\n    <div className = \"linkdesc\"></div>\n    <Row className = \"linkRow\">\n        <Col size =\"sm\">\n        <a href = \"https://github.com/fasttrackd-student-work/java-assignment-schema-design-PattonParham\" className = \"links\">Schema Design</a>\n        </Col>\n        <Col size =\"sm\">\n        <button href = \"\" className = \"description\" onClick ={() => this.setState({ showSchemaDesign: !showSchemaDesign})}>Description</button>\n        { showSchemaDesign\n            ? <div className = \"pDiv\">\n            <div className=\"dDiv\">\n            User Story: As a person with specific interests I want a friend finding app so that I can \n            get connected with other people in my area who share the same interests\n            </div>\n            <div className=\"dDiv\">\n            Description: A schema written to represent relationship between persons, interests and location to \n            match them up based on interest and location\n            </div>\n            </div>\n            : null\n        }\n        </Col>    \n    </Row>\n    <div className = \"linkdesc\"></div>\n    <Row className = \"linkRow\">\n        <Col size =\"sm\">\n        <a href = \"https://github.com/fasttrackd-student-work/spring-assignment-rest-PattonParham\" className = \"links\">Controllers/Services</a>\n        </Col>\n        <Col size =\"sm\">\n        <button href = \"\" className = \"description\" onClick ={() => this.setState({ showControllersServices: !showControllersServices})}>Description</button>\n        { showControllersServices\n            ? <div className = \"pDiv\">\n            <div className=\"dDiv\">\n            User Story: As an instructor I want a quiz application so that I can create quizzes,\n            questions, and answers, save them and create randomized quizzes\n            </div>\n            <div className=\"dDiv\">\n            Description: An application written in Java and Spring that allows the user to input\n            their own custom quizzes, questions and answers\n            </div>\n            </div>\n            : null\n        }\n        </Col> \n    </Row>\n    <div className = \"linkdesc\"></div>\n    <Row className = \"linkRow\">\n        <Col size =\"sm\">\n        <a href = \"https://github.com/fasttrackd-student-work/spring-assessment-social-media-team-sprint1\" className = \"links\">Twitter API Assessment</a>\n        </Col>\n        <Col size =\"sm\">\n        <button href = \"\" className = \"description\" onClick ={() => this.setState({ showTwitterAPI: !showTwitterAPI})}>Description</button>\n        { showTwitterAPI\n            ? <div className = \"pDiv\">\n            <div className=\"dDiv\">\n            User Story: As a twitter developer I want a Twitter API so that I can perform the \n            functionalities of twitter on my database\n            </div>\n            <div className=\"dDiv\">\n            Description: A mock twitter API devleoped using Controllers, Services, Repositories and Response DTOs\n            </div>\n            </div>\n            : null\n        }\n        </Col> \n    </Row>\n    <div className = \"linkdesc\"></div>\n    <Row className = \"linkRow\">\n        <Col size =\"sm\">\n        <a href = \"https://github.com/fasttrackd-student-work/js-assignment-primer-PattonParham\" className = \"links\">JS Primer</a>\n        </Col> \n        <Col size =\"sm\">\n        <button href = \"\" className = \"description\" onClick ={() => this.setState({ showJSPrimer: !showJSPrimer})}>Description</button>\n        { showJSPrimer\n            ? <div className = \"pDiv\">\n            <div className=\"dDiv\">\n            User Story: As a store clerk I want a program so that I can calculate the \n            total price of items with tax included\n            </div>\n            <div className=\"dDiv\">\n            Description: Description: A simple function that calculates the total price of items, \n            tax included where applicable\n            </div>\n            </div>\n            : null\n        }\n        </Col>  \n    </Row>\n    <div className = \"linkdesc\"></div>\n    <Row className = \"linkRow\">\n        <Col size =\"sm\">\n        <a href = \"https://github.com/fasttrackd-student-work/js-assignment-declarative-PattonParham\" className = \"links\">JS Declarative</a>\n        </Col> \n        <Col size =\"sm\">\n        <button href = \"\" className = \"description\" onClick ={() => this.setState({ showJSDeclarative: !showJSDeclarative})}>Description</button>\n        { showJSDeclarative\n            ? <div className = \"pDiv\">\n            <div className=\"dDiv\">\n            User Story: As a store clerk I want a program so that I can calculate the \n            total price of items with tax included\n            </div>\n            <div className=\"dDiv\">\n            Description: A simple function that calculates the total price of items, \n            tax included where applicable\n            </div>\n            </div>\n            : null\n        }\n        </Col> \n    </Row>\n    <div className = \"linkdesc\"></div>\n    <Row className = \"linkRow\">\n        <Col size =\"sm\">\n        <a href = \"https://github.com/fasttrackd-student-work/js-assignment-quizler-PattonParham\" className = \"links\">JS Quizler</a>\n        </Col>\n        <Col size =\"sm\">\n        <button href = \"\" className = \"description\" onClick ={() => this.setState({ showJSQuizler: !showJSQuizler})}>Description</button>\n        { showJSQuizler\n            ? <div className = \"pDiv\">\n            <div className=\"dDiv\">\n            User Story: As an instructor I want a quiz application so that I can create quizzes,\n            questions, and answers, save them and create randomized quizzes\n            </div>\n            <div className=\"dDiv\">\n            Description: An application written in JavaScript, utilizing inquirer.js and vorpal.js \n            that allows the user to input their own custom quizzes, questions and answers\n            </div>\n            </div>\n            : null\n        }\n        </Col>  \n    </Row>\n    <div className = \"linkdesc\"></div>\n    <Row className = \"linkRow\">\n        <Col size =\"sm\">\n        <a href = \"https://github.com/fasttrackd-student-work/js-assignment-copy-page-PattonParham\" className = \"links\">JS Copy Page</a>\n        </Col>\n        <Col size =\"sm\">\n        <button href = \"\" className = \"description\" onClick ={() => this.setState({ showJSCopyPage: !showJSCopyPage})}>Description</button>\n        { showJSCopyPage\n            ? <div className = \"pDiv\">\n            <div className=\"dDiv\">\n            User Story: As a mac salesperson I want an informative web page so that I can have an aesthetically\n            pleasing document to reference when potential customers have questions\n            </div>\n            <div className=\"dDiv\">\n            Description: A mock html and css webpage design of the Macbook Pro Technical Specifications\n            </div>\n            </div>\n            : null\n        }\n        </Col>  \n    </Row>\n    <div className = \"linkdesc\"></div>\n    <Row className = \"linkRow\">\n        <Col size =\"sm\">\n        <a href = \"https://github.com/fasttrackd-student-work/js-assignment-dev-duel-PattonParham\" className = \"links\">JS Dev-Duel</a>\n        </Col>\n        <Col size =\"sm\">\n        <button href = \"\" className = \"description\" onClick ={() => this.setState({ showJSDevDuel: !showJSDevDuel})}>Description</button>\n        { showJSDevDuel\n            ? <div className = \"pDiv\">\n            <div className=\"dDiv\">\n            User Story: As a github user I want a game where I can battle other github users based on their stats\n            </div>\n            <div className=\"dDiv\">\n            Description: A JavaScript written game in which two github users enter, and based on their stats accessed using github's api,\n            one github user exits victorious\n            </div>\n            </div>\n            : null\n        }\n        </Col>  \n    </Row>\n    <div className = \"linkdesc\"></div>\n    <Row className = \"linkRow\">\n        <Col size =\"sm\">\n        <a href = \"https://pattonparham.github.io/Password-Generator/\" className = \"links\">Password Generator</a>\n        </Col> \n        <Col size =\"sm\">\n        <button href = \"\" className = \"description\" onClick ={() => this.setState({ showPasswordGenerator: !showPasswordGenerator})}>Description</button>\n        { showPasswordGenerator\n            ? <div className = \"pDiv\">\n            <div className=\"dDiv\">\n            User Story: As an account user I want a password generator so that I can have a secure,\n            randomly generated password\n            </div>\n            <div className=\"dDiv\">\n            Description: A password generator written in javascript where you can specify character length\n            and what types of characters you'd like to include\n            </div>\n            </div>\n            : null\n        }\n        </Col> \n\n    </Row>\n    <div className = \"linkdesc\"></div>\n    <Row className = \"linkRow\">\n        <Col size =\"sm\">\n        <a href = \"https://pattonparham.github.io/Weather-Dashboard/\" className = \"links\">Weather Dashboard</a>\n        </Col> \n        <Col size =\"sm\">\n        <button href = \"\" className = \"description\" onClick ={() => this.setState({ showWeatherDash: !showWeatherDash})}>Description</button>\n        { showWeatherDash\n            ? <div className = \"pDiv\">\n            <div className=\"dDiv\">\n            User Story: As an outdoors person I want a weather dashboard so that I can check the weather \n            before I make plans outdoors\n            </div>\n            <div className=\"dDiv\">\n            Description: A weather dashboard written in JavaScript/jQuery that provides the 5 day forecast\n            for any city in the USA using the Wational Weather API\n            </div>\n            </div>\n            : null\n        }\n        </Col> \n    </Row>\n    <div className = \"linkdesc\"></div>\n    <Row className = \"linkRow\">\n        <Col size =\"sm\">\n        <a href = \"https://jackjewell.github.io/TakeAHike/\"  className = \"links\">Take A Hike</a>\n        </Col> \n        <Col size =\"sm\">\n        <button href = \"\" className = \"description\" onClick ={() => this.setState({ showTakeAHike: !showTakeAHike})}>Description</button>\n        { showTakeAHike\n            ? <div className = \"pDiv\">\n            <div className=\"dDiv\">\n            User Story: As an outdoors person I want a park finder so that I can find nice places\n            to hike near by me or in specific locations\n            </div>\n            <div className=\"dDiv\">\n            Description: A national park finder written in JavaScript using the National Parks Service API \n            to location parks near spefic locations\n            </div>\n            </div>\n            : null\n        }\n        </Col> \n    </Row>\n    <div className = \"linkdesc\"></div>\n    <Row className = \"linkRow\">\n        <Col size =\"sm\">\n        <a href = \"https://serene-ravine-67154.herokuapp.com/\" className = \"links\">Employee Directory</a>\n        </Col>\n        <Col size =\"sm\">\n        <button href = \"\" className = \"description\" onClick ={() => this.setState({ showEmployeeDirectory: !showEmployeeDirectory})}>Description</button>\n        { showEmployeeDirectory\n            ? <div className = \"pDiv\">\n            <div className=\"dDiv\">\n            User Story:\n            </div>\n            <div className=\"dDiv\">\n            Description:\n            </div>\n            </div>\n            : null\n        }\n        </Col>  \n    </Row>\n    <div className = \"linkdesc\"></div>\n    <Row className = \"linkRow\">\n        <Col size =\"sm\">\n        <a href = \"https://aqueous-beyond-24181.herokuapp.com/\" className = \"links\">GenSplice</a>\n        </Col> \n        <Col size =\"sm\">\n        <button href = \"\" className = \"description\" id= \"bottomBtn\" onClick ={() => this.setState({ showGensplice : !showGensplice })}>Description</button>\n        { showGensplice \n            ? <div className = \"pDiv\">\n            <div className=\"dDiv\">\n            User Story: As a producer I want a random rhythmic audio generator so that I can \n            generate new ideas outside the box of human thinking therefore more rapidly\n            </div>\n            <div className=\"dDiv\">\n            Description: A random audio generator React App written in JavaScript and utlilizing sound cloud's \n            API and react-player widget to acces wav files from soundcloud and based on millisecond inputs,\n            generate and splice together randomly any wavs input via url\n            </div>\n            </div>\n            : null\n        }\n        </Col> \n    </Row>\n</div>\n);\n\n    }\n\n\n\n};\n\nexport default ProjectsWindow;"]},"metadata":{},"sourceType":"module"}